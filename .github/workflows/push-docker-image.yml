name: Publish Docker
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Get current date
        id: date
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d')"
          echo "::set-output name=github_sha::$GITHUB_SHA"
      
      - name: Get image tag
        id: image
        run: |
          echo "::set-output name=image_tag::${{ steps.date.outputs.date }}-${{ steps.date.outputs.github_sha }}"

      - name: Build docker image
        run: |
          docker build . --tag aemdeveloper/startuplink-web-go:${{ steps.image.outputs.image_tag }}
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push aemdeveloper/startuplink-web-go:${{ steps.image.outputs.image_tag }}

      - name: Deploy last image on instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker volume create boltdb_store
            if [ $(docker ps -a | grep startupLinkWeb | wc -l) -gt 0 ]
            then
              docker stop startupLinkWeb
              docker rm --force startupLinkWeb
              echo "Container stopped"
            fi
            docker run --network=host --detach \
              --name ${{ secrets.CONTAINER_NAME }} \
              --env AUTH0_CLIENT_ID=${{ secrets.AUTH0_CLIENT_ID }} \
              --env AUTH0_CLIENT_SECRET=${{ secrets.AUTH0_CLIENT_SECRET }} \
              --env AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }} \
              --env STORE_BOLT_DB=/backend/var/store \
              --env COOKIE_AUTH_KEY=${{ secrets.COOKIE_AUTH_KEY }} \
              --env COOKIE_SECRET_KEY=${{ secrets.COOKIE_SECRET_KEY }} \
              --env AUTH0_CALLBACK_URL=${{ secrets.HOST_DOMAIN }}/callback \
              --env PROFILE=prod \
              --env ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
              --volume boltdb_store:/backend/var/store \
              --publish 8080:8080 \
              aemdeveloper/startuplink-web-go:${{ steps.image.outputs.image_tag }}
